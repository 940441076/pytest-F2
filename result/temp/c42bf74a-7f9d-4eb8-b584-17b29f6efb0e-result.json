{"name": "回撤", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_scanImage.Test_ScanImagePage object at 0x000002349B960E10>\n\n    @allure.title('回撤')\n    def test_pullback(self):\n        allure.dynamic.description('回撤')\n        try:\n            app = common_util.connect_application()\n            common_util.back_scanImagePage()\n            with allure.step('6k:不同转速和距离'):\n                # 6k转\n                setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                setting_btn.click_input()\n                play_type = app['血管内断层成像系统'].child_window(auto_id=\"comLoop\", control_type=\"ComboBox\", found_index=0)\n                play_type.select(0)\n                play_speed = app['血管内断层成像系统'].child_window(auto_id=\"playbackSpeed\", control_type=\"Slider\", found_index=0)\n                play_speed.set_value(10)\n                k6_btn = app['血管内断层成像系统'].child_window(title=\"6k转\", auto_id=\"rbRotateSpeed6000\",control_type=\"RadioButton\", found_index=0)\n                k6_btn.click()\n                pull_len = app['血管内断层成像系统'].child_window(auto_id=\"comPullback\", control_type=\"ComboBox\")\n                pull_len.select(0)\n                pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\")\n                pull_speed.select(0)\n                content_len = pull_len.texts()\n                content_speed = pull_speed.texts()\n                for i in range(len(content_len)):\n                    setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                    if setting_close_btn.exists() == False:\n                        setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                        setting_btn.click_input()\n                    pull_len.select(i)\n                    for j in range(len(content_speed)):\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                        if setting_close_btn.exists() == False:\n                            setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                            setting_btn.click_input()\n                        pull_speed.select(j)\n                        time.sleep(1)\n                        common_util.screen_shot('距离/速度')\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                        setting_close_btn.click()\n                        time.sleep(1)\n                        dsa = common_util.read_systemInfo()\n                        if dsa['DSA'] == True:\n                            dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", control_type=\"Text\", found_index=0)\n                            if dsa_btn.exists():\n                                dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", auto_id=\"btnShow\",control_type=\"Button\")\n                                dsa_btn.click_input()\n                        time.sleep(1)\n                        scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        scan_btn.click()\n                        time.sleep(5)\n                        if i == 0 and j == 0:\n                            calibration_btn = app['血管内断层成像系统'].child_window(auto_id=\"autoCalibration\",control_type=\"Button\")\n                            calibration_btn.click()\n                            time.sleep(13)\n                        ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\")\n                        if ok_btn.exists():\n                            ok_btn.click()\n                        else:\n                            stop_btn = app['血管内断层成像系统'].child_window(auto_id=\"stopScan\", control_type=\"Button\")\n                            stop_btn.click()\n                        scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        scan_btn.click()\n                        time.sleep(5)\n                        ready_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        ready_btn.click()\n                        time.sleep(5)\n                        pullback_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        pullback_btn.click()\n                        reset_btn = app['血管内断层成像系统'].child_window(title=\"校准\", auto_id=\"btnResetShrink\",control_type=\"Button\").wait('enabled', timeout=180)\n                        assert reset_btn.is_enabled()\n                        mm_pos = app['血管内断层成像系统'].child_window(title=\"mm\", control_type=\"Text\", found_index=0)\n                        rect = mm_pos.rectangle().mid_point()\n                        mouse.click(coords=(rect.x, rect.y))\n                        play_btn = app['血管内断层成像系统'].child_window(auto_id=\"playBtn\", control_type=\"Button\")\n                        rect = play_btn.rectangle().mid_point()\n                        mouse.click(coords=(rect.x, rect.y))\n                        clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClipImage\", control_type=\"Button\").wait(wait_for='enabled', timeout=12)\n                        if clip_btn.is_enabled():\n                            clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"txtIndex\", control_type=\"Text\")\n                            frame_truth = int(clip_btn.texts()[0].split(': ')[-1])\n                            pullLen = content_len[i].split('mm')[0]\n                            pullSpeed = content_speed[j].split('mm')[0]\n                            frame_expect = int(int(pullLen) / int(pullSpeed) * 100)\n                            error = int(frame_expect * 0.05)\n                            assert abs(frame_expect - frame_truth)< error\n                        time.sleep(1)\n                        add_btn = app['血管内断层成像系统'].child_window(auto_id=\"addOCT\", control_type=\"Button\")\n                        add_btn.click()\n                        time.sleep(2)\n            with allure.step('12k:不同转速和距离'):\n                # 12k转\n                k12 = common_util.read_systemInfo()\n                if k12['K12'] == True:\n                    setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                    setting_btn.click_input()\n                    play_type = app['血管内断层成像系统'].child_window(auto_id=\"comLoop\", control_type=\"ComboBox\", found_index=0)\n                    play_type.select(0)\n                    play_speed = app['血管内断层成像系统'].child_window(auto_id=\"playbackSpeed\", control_type=\"Slider\", found_index=0)\n                    play_speed.set_value(10)\n                    pull_len = app['血管内断层成像系统'].child_window(auto_id=\"comPullback\", control_type=\"ComboBox\")\n                    pull_len.select(0)\n                    pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\")\n                    pull_speed.select(0)\n                    k12_btn = app['血管内断层成像系统'].child_window(title=\"12k转\", auto_id=\"rbRotateSpeed12000\",control_type=\"RadioButton\", found_index=0)\n                    k12_btn.click()\n                    content_len = pull_len.texts()\n                    content_speed = pull_speed.texts()\n                    for i in range(len(content_len)):\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                        if setting_close_btn.exists() == False:\n                            setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                            setting_btn.click_input()\n                        pull_len.select(i)\n                        pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\",found_index=0)\n                        for j in range(len(content_speed)):\n                            setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                            if setting_close_btn.exists() == False:\n                                setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\",control_type=\"Button\")\n                                setting_btn.click_input()\n                            pull_speed.select(j)\n                            time.sleep(1)\n                            common_util.screen_shot('距离/速度')\n                            setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                            setting_close_btn.click()\n                            dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", control_type=\"Text\", found_index=0)\n                            if dsa_btn.exists():\n                                dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", auto_id=\"btnShow\",control_type=\"Button\")\n                                dsa_btn.click_input()\n                            scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            scan_btn.click()\n                            time.sleep(5)\n                            ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\")\n                            if ok_btn.exists():\n                                ok_btn.click()\n                            else:\n                                stop_btn = app['血管内断层成像系统'].child_window(auto_id=\"stopScan\", control_type=\"Button\")\n                                stop_btn.click()\n                            scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            scan_btn.click()\n                            time.sleep(5)\n                            ready_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            ready_btn.click()\n                            time.sleep(5)\n                            pullback_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            pullback_btn.click()\n                            reset_btn = app['血管内断层成像系统'].child_window(title=\"校准\", auto_id=\"btnResetShrink\",control_type=\"Button\").wait('enabled', timeout=180)\n                            assert reset_btn.is_enabled()\n                            mm_pos = app['血管内断层成像系统'].child_window(title=\"mm\", control_type=\"Text\", found_index=0)\n                            rect = mm_pos.rectangle().mid_point()\n                            mouse.click(coords=(rect.x, rect.y))\n                            play_btn = app['血管内断层成像系统'].child_window(auto_id=\"playBtn\", control_type=\"Button\")\n                            rect = play_btn.rectangle().mid_point()\n                            mouse.click(coords=(rect.x, rect.y))\n                            clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClipImage\", control_type=\"Button\").wait(wait_for='enabled', timeout=12)\n                            if clip_btn.is_enabled():\n                                clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"txtIndex\", control_type=\"Text\")\n                                frame_truth = int(clip_btn.texts()[0].split(': ')[-1])\n                                pullLen = content_len[i].split('mm')[0]\n                                pullSpeed = content_speed[j].split('mm')[0]\n                                frame_expect = int(int(pullLen) / int(pullSpeed) * 200)\n                                error = int(frame_expect * 0.05)\n>                               assert abs(frame_expect - frame_truth)< error\nE                               assert 31 < 30\nE                                +  where 31 = abs((600 - 569))\n\ntestcases\\scanImage\\test_scanImage.py:304: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_scanImage.Test_ScanImagePage object at 0x000002349B960E10>\n\n    @allure.title('回撤')\n    def test_pullback(self):\n        allure.dynamic.description('回撤')\n        try:\n            app = common_util.connect_application()\n            common_util.back_scanImagePage()\n            with allure.step('6k:不同转速和距离'):\n                # 6k转\n                setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                setting_btn.click_input()\n                play_type = app['血管内断层成像系统'].child_window(auto_id=\"comLoop\", control_type=\"ComboBox\", found_index=0)\n                play_type.select(0)\n                play_speed = app['血管内断层成像系统'].child_window(auto_id=\"playbackSpeed\", control_type=\"Slider\", found_index=0)\n                play_speed.set_value(10)\n                k6_btn = app['血管内断层成像系统'].child_window(title=\"6k转\", auto_id=\"rbRotateSpeed6000\",control_type=\"RadioButton\", found_index=0)\n                k6_btn.click()\n                pull_len = app['血管内断层成像系统'].child_window(auto_id=\"comPullback\", control_type=\"ComboBox\")\n                pull_len.select(0)\n                pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\")\n                pull_speed.select(0)\n                content_len = pull_len.texts()\n                content_speed = pull_speed.texts()\n                for i in range(len(content_len)):\n                    setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                    if setting_close_btn.exists() == False:\n                        setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                        setting_btn.click_input()\n                    pull_len.select(i)\n                    for j in range(len(content_speed)):\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                        if setting_close_btn.exists() == False:\n                            setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                            setting_btn.click_input()\n                        pull_speed.select(j)\n                        time.sleep(1)\n                        common_util.screen_shot('距离/速度')\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\", control_type=\"Button\")\n                        setting_close_btn.click()\n                        time.sleep(1)\n                        dsa = common_util.read_systemInfo()\n                        if dsa['DSA'] == True:\n                            dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", control_type=\"Text\", found_index=0)\n                            if dsa_btn.exists():\n                                dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", auto_id=\"btnShow\",control_type=\"Button\")\n                                dsa_btn.click_input()\n                        time.sleep(1)\n                        scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        scan_btn.click()\n                        time.sleep(5)\n                        if i == 0 and j == 0:\n                            calibration_btn = app['血管内断层成像系统'].child_window(auto_id=\"autoCalibration\",control_type=\"Button\")\n                            calibration_btn.click()\n                            time.sleep(13)\n                        ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\")\n                        if ok_btn.exists():\n                            ok_btn.click()\n                        else:\n                            stop_btn = app['血管内断层成像系统'].child_window(auto_id=\"stopScan\", control_type=\"Button\")\n                            stop_btn.click()\n                        scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        scan_btn.click()\n                        time.sleep(5)\n                        ready_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        ready_btn.click()\n                        time.sleep(5)\n                        pullback_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                        pullback_btn.click()\n                        reset_btn = app['血管内断层成像系统'].child_window(title=\"校准\", auto_id=\"btnResetShrink\",control_type=\"Button\").wait('enabled', timeout=180)\n                        assert reset_btn.is_enabled()\n                        mm_pos = app['血管内断层成像系统'].child_window(title=\"mm\", control_type=\"Text\", found_index=0)\n                        rect = mm_pos.rectangle().mid_point()\n                        mouse.click(coords=(rect.x, rect.y))\n                        play_btn = app['血管内断层成像系统'].child_window(auto_id=\"playBtn\", control_type=\"Button\")\n                        rect = play_btn.rectangle().mid_point()\n                        mouse.click(coords=(rect.x, rect.y))\n                        clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClipImage\", control_type=\"Button\").wait(wait_for='enabled', timeout=12)\n                        if clip_btn.is_enabled():\n                            clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"txtIndex\", control_type=\"Text\")\n                            frame_truth = int(clip_btn.texts()[0].split(': ')[-1])\n                            pullLen = content_len[i].split('mm')[0]\n                            pullSpeed = content_speed[j].split('mm')[0]\n                            frame_expect = int(int(pullLen) / int(pullSpeed) * 100)\n                            error = int(frame_expect * 0.05)\n                            assert abs(frame_expect - frame_truth)< error\n                        time.sleep(1)\n                        add_btn = app['血管内断层成像系统'].child_window(auto_id=\"addOCT\", control_type=\"Button\")\n                        add_btn.click()\n                        time.sleep(2)\n            with allure.step('12k:不同转速和距离'):\n                # 12k转\n                k12 = common_util.read_systemInfo()\n                if k12['K12'] == True:\n                    setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                    setting_btn.click_input()\n                    play_type = app['血管内断层成像系统'].child_window(auto_id=\"comLoop\", control_type=\"ComboBox\", found_index=0)\n                    play_type.select(0)\n                    play_speed = app['血管内断层成像系统'].child_window(auto_id=\"playbackSpeed\", control_type=\"Slider\", found_index=0)\n                    play_speed.set_value(10)\n                    pull_len = app['血管内断层成像系统'].child_window(auto_id=\"comPullback\", control_type=\"ComboBox\")\n                    pull_len.select(0)\n                    pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\")\n                    pull_speed.select(0)\n                    k12_btn = app['血管内断层成像系统'].child_window(title=\"12k转\", auto_id=\"rbRotateSpeed12000\",control_type=\"RadioButton\", found_index=0)\n                    k12_btn.click()\n                    content_len = pull_len.texts()\n                    content_speed = pull_speed.texts()\n                    for i in range(len(content_len)):\n                        setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                        if setting_close_btn.exists() == False:\n                            setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\", control_type=\"Button\")\n                            setting_btn.click_input()\n                        pull_len.select(i)\n                        pull_speed = app['血管内断层成像系统'].child_window(auto_id=\"comPullBackSped\", control_type=\"ComboBox\",found_index=0)\n                        for j in range(len(content_speed)):\n                            setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                            if setting_close_btn.exists() == False:\n                                setting_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSetting\",control_type=\"Button\")\n                                setting_btn.click_input()\n                            pull_speed.select(j)\n                            time.sleep(1)\n                            common_util.screen_shot('距离/速度')\n                            setting_close_btn = app['血管内断层成像系统'].child_window(auto_id=\"closeSetting\",control_type=\"Button\")\n                            setting_close_btn.click()\n                            dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", control_type=\"Text\", found_index=0)\n                            if dsa_btn.exists():\n                                dsa_btn = app['血管内断层成像系统'].child_window(title=\"显示DSA\", auto_id=\"btnShow\",control_type=\"Button\")\n                                dsa_btn.click_input()\n                            scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            scan_btn.click()\n                            time.sleep(5)\n                            ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\")\n                            if ok_btn.exists():\n                                ok_btn.click()\n                            else:\n                                stop_btn = app['血管内断层成像系统'].child_window(auto_id=\"stopScan\", control_type=\"Button\")\n                                stop_btn.click()\n                            scan_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            scan_btn.click()\n                            time.sleep(5)\n                            ready_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            ready_btn.click()\n                            time.sleep(5)\n                            pullback_btn = app['血管内断层成像系统'].child_window(auto_id=\"staScan\", control_type=\"Button\")\n                            pullback_btn.click()\n                            reset_btn = app['血管内断层成像系统'].child_window(title=\"校准\", auto_id=\"btnResetShrink\",control_type=\"Button\").wait('enabled', timeout=180)\n                            assert reset_btn.is_enabled()\n                            mm_pos = app['血管内断层成像系统'].child_window(title=\"mm\", control_type=\"Text\", found_index=0)\n                            rect = mm_pos.rectangle().mid_point()\n                            mouse.click(coords=(rect.x, rect.y))\n                            play_btn = app['血管内断层成像系统'].child_window(auto_id=\"playBtn\", control_type=\"Button\")\n                            rect = play_btn.rectangle().mid_point()\n                            mouse.click(coords=(rect.x, rect.y))\n                            clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClipImage\", control_type=\"Button\").wait(wait_for='enabled', timeout=12)\n                            if clip_btn.is_enabled():\n                                clip_btn = app['血管内断层成像系统'].child_window(auto_id=\"txtIndex\", control_type=\"Text\")\n                                frame_truth = int(clip_btn.texts()[0].split(': ')[-1])\n                                pullLen = content_len[i].split('mm')[0]\n                                pullSpeed = content_speed[j].split('mm')[0]\n                                frame_expect = int(int(pullLen) / int(pullSpeed) * 200)\n                                error = int(frame_expect * 0.05)\n                                assert abs(frame_expect - frame_truth)< error\n                                time.sleep(1)\n                            add_btn = app['血管内断层成像系统'].child_window(auto_id=\"addOCT\", control_type=\"Button\")\n                            add_btn.click()\n                            time.sleep(2)\n        except Exception as e:\n            time.sleep(1)\n            common_util.screen_shot('异常截图')\n            time.sleep(1)\n            common_util.kill_app()\n            time.sleep(2)\n            common_util.connect_application()\n            common_util.add_text(str(e))\n>           assert False\nE           assert False\n\ntestcases\\scanImage\\test_scanImage.py:317: AssertionError"}, "description": "回撤", "steps": [{"name": "6k:不同转速和距离", "status": "passed", "attachments": [{"name": "距离/速度", "source": "1935716e-82a1-4843-8cf3-0d457f8181f0-attachment.jpg", "type": "image/jpg"}, {"name": "距离/速度", "source": "0a59c430-9d7d-4154-b3e7-3635b625ddc0-attachment.jpg", "type": "image/jpg"}, {"name": "距离/速度", "source": "082849f8-d3c2-4acc-a18d-f7c7d7db2130-attachment.jpg", "type": "image/jpg"}, {"name": "距离/速度", "source": "e0e682a5-bc34-4fc7-80c6-abf381b453b1-attachment.jpg", "type": "image/jpg"}], "start": 1688714561126, "stop": 1688714834852}, {"name": "12k:不同转速和距离", "status": "failed", "statusDetails": {"message": "AssertionError: assert 31 < 30\n +  where 31 = abs((600 - 569))\n", "trace": "  File \"D:\\workspace\\pytest-F2\\testcases\\scanImage\\test_scanImage.py\", line 304, in test_pullback\n    assert abs(frame_expect - frame_truth)< error\n"}, "attachments": [{"name": "距离/速度", "source": "e0af50b7-e7eb-4d90-89bf-eff32ac2d3d3-attachment.jpg", "type": "image/jpg"}], "start": 1688714834852, "stop": 1688714922450}], "attachments": [{"name": "异常截图", "source": "017fcdfa-e70d-40a7-a32e-28623ca5aa7a-attachment.jpg", "type": "image/jpg"}, {"name": "assert 31 < 30\n +  where 31 = abs((600 - 569))", "source": "6cbe9851-3e2f-4eb3-9a5c-b6a55d4a2fc4-attachment.txt", "type": "text/plain"}], "start": 1688714556607, "stop": 1688714942074, "uuid": "483e43f6-95e7-4ecc-b0e4-1d5d2f61a26f", "historyId": "43bfe13d1bd9ee1ea2a89edd932870cf", "testCaseId": "43bfe13d1bd9ee1ea2a89edd932870cf", "fullName": "testcases.scanImage.test_scanImage.Test_ScanImagePage#test_pullback", "labels": [{"name": "feature", "value": "扫描图像界面"}, {"name": "tag", "value": "run(order=5)"}, {"name": "parentSuite", "value": "testcases.scanImage"}, {"name": "suite", "value": "test_scanImage"}, {"name": "subSuite", "value": "Test_ScanImagePage"}, {"name": "host", "value": "DESKTOP-8BNU2EL"}, {"name": "thread", "value": "7472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.scanImage.test_scanImage"}]}